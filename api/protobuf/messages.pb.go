// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: messages.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StatusCode int32

const (
	StatusCode_STATUS_CODE_OK               StatusCode = 0
	StatusCode_STATUS_CODE_ERROR            StatusCode = 1
	StatusCode_STATUS_CODE_TIMEOUT          StatusCode = 2
	StatusCode_STATUS_CODE_NOT_FOUND        StatusCode = 3
	StatusCode_STATUS_CODE_INVALID_ARGUMENT StatusCode = 4
	StatusCode_STATUS_CODE_ALREADY_EXISTS   StatusCode = 5
	StatusCode_STATUS_CODE_QUEUE_NOT_FOUND  StatusCode = 6
	StatusCode_STATUS_CODE_QUEUE_BUSY       StatusCode = 7
	StatusCode_STATUS_CODE_QUEUE_PAUSED     StatusCode = 8
	StatusCode_STATUS_CODE_LEADER_SWITCH    StatusCode = 9
)

// Enum value maps for StatusCode.
var (
	StatusCode_name = map[int32]string{
		0: "STATUS_CODE_OK",
		1: "STATUS_CODE_ERROR",
		2: "STATUS_CODE_TIMEOUT",
		3: "STATUS_CODE_NOT_FOUND",
		4: "STATUS_CODE_INVALID_ARGUMENT",
		5: "STATUS_CODE_ALREADY_EXISTS",
		6: "STATUS_CODE_QUEUE_NOT_FOUND",
		7: "STATUS_CODE_QUEUE_BUSY",
		8: "STATUS_CODE_QUEUE_PAUSED",
		9: "STATUS_CODE_LEADER_SWITCH",
	}
	StatusCode_value = map[string]int32{
		"STATUS_CODE_OK":               0,
		"STATUS_CODE_ERROR":            1,
		"STATUS_CODE_TIMEOUT":          2,
		"STATUS_CODE_NOT_FOUND":        3,
		"STATUS_CODE_INVALID_ARGUMENT": 4,
		"STATUS_CODE_ALREADY_EXISTS":   5,
		"STATUS_CODE_QUEUE_NOT_FOUND":  6,
		"STATUS_CODE_QUEUE_BUSY":       7,
		"STATUS_CODE_QUEUE_PAUSED":     8,
		"STATUS_CODE_LEADER_SWITCH":    9,
	}
)

func (x StatusCode) Enum() *StatusCode {
	p := new(StatusCode)
	*p = x
	return p
}

func (x StatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[0].Descriptor()
}

func (StatusCode) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[0]
}

func (x StatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusCode.Descriptor instead.
func (StatusCode) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of the item. It is generated by the server.
	// ID is optional, for case when you are enqueueing new item
	// ID is not suppose to be set by the client, but is generated by the server.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Priority of the item. The lower the value, the lower the priority.
	Priority uint32 `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	// Grouping key of the item. Items with the same key are grouped and returned together to the same receiver when the first groupped item hits the head.
	// For example, if the first item with key "A" is pulled, all items with key "A" will be returned to the same receiver immediately after the first item is pulled.
	// Grouping has higher priority than priority.
	Key []byte `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	// Payload of the item.
	Value []byte `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	mi := &file_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

func (x *Item) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Item) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Item) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Item) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type InputItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// In what duration item should be ready to pull, 0 for immediate pull.
	Ttl *durationpb.Duration `protobuf:"bytes,1,opt,name=ttl,proto3" json:"ttl,omitempty"`
	// Priority of the item. The lower the value, the lower the priority.
	Priority uint32 `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	// Grouping key of the item. Items with the same key are grouped and returned together to the same receiver when the first groupped item hits the head.
	// For example, if the first item with key "A" is pulled, all items with key "A" will be returned to the same receiver immediately after the first item is pulled.
	// Grouping has higher priority than priority.
	Key []byte `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	// Payload of the item.
	Value []byte `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *InputItem) Reset() {
	*x = InputItem{}
	mi := &file_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InputItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputItem) ProtoMessage() {}

func (x *InputItem) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputItem.ProtoReflect.Descriptor instead.
func (*InputItem) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

func (x *InputItem) GetTtl() *durationpb.Duration {
	if x != nil {
		return x.Ttl
	}
	return nil
}

func (x *InputItem) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *InputItem) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *InputItem) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type QueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId uint64 `protobuf:"varint,1,opt,name=correlationId,proto3" json:"correlationId,omitempty"`
	// Types that are assignable to Command:
	//
	//	*QueueRequest_Setup
	//	*QueueRequest_Noop
	//	*QueueRequest_Enqueue
	//	*QueueRequest_PullSingle
	//	*QueueRequest_Pull
	//	*QueueRequest_CommitSingle
	//	*QueueRequest_Commit
	//	*QueueRequest_RequeueSingle
	//	*QueueRequest_Requeue
	//	*QueueRequest_DeleteSingle
	//	*QueueRequest_Delete
	Command isQueueRequest_Command `protobuf_oneof:"command"`
}

func (x *QueueRequest) Reset() {
	*x = QueueRequest{}
	mi := &file_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueRequest) ProtoMessage() {}

func (x *QueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueRequest.ProtoReflect.Descriptor instead.
func (*QueueRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

func (x *QueueRequest) GetCorrelationId() uint64 {
	if x != nil {
		return x.CorrelationId
	}
	return 0
}

func (m *QueueRequest) GetCommand() isQueueRequest_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (x *QueueRequest) GetSetup() *SetupRequest {
	if x, ok := x.GetCommand().(*QueueRequest_Setup); ok {
		return x.Setup
	}
	return nil
}

func (x *QueueRequest) GetNoop() *NoopRequest {
	if x, ok := x.GetCommand().(*QueueRequest_Noop); ok {
		return x.Noop
	}
	return nil
}

func (x *QueueRequest) GetEnqueue() *EnqueueRequest {
	if x, ok := x.GetCommand().(*QueueRequest_Enqueue); ok {
		return x.Enqueue
	}
	return nil
}

func (x *QueueRequest) GetPullSingle() *PullSingleRequest {
	if x, ok := x.GetCommand().(*QueueRequest_PullSingle); ok {
		return x.PullSingle
	}
	return nil
}

func (x *QueueRequest) GetPull() *PullRequest {
	if x, ok := x.GetCommand().(*QueueRequest_Pull); ok {
		return x.Pull
	}
	return nil
}

func (x *QueueRequest) GetCommitSingle() *CommitSingleRequest {
	if x, ok := x.GetCommand().(*QueueRequest_CommitSingle); ok {
		return x.CommitSingle
	}
	return nil
}

func (x *QueueRequest) GetCommit() *CommitRequest {
	if x, ok := x.GetCommand().(*QueueRequest_Commit); ok {
		return x.Commit
	}
	return nil
}

func (x *QueueRequest) GetRequeueSingle() *RequeueSingleRequest {
	if x, ok := x.GetCommand().(*QueueRequest_RequeueSingle); ok {
		return x.RequeueSingle
	}
	return nil
}

func (x *QueueRequest) GetRequeue() *RequeueRequest {
	if x, ok := x.GetCommand().(*QueueRequest_Requeue); ok {
		return x.Requeue
	}
	return nil
}

func (x *QueueRequest) GetDeleteSingle() *DeleteSingleRequest {
	if x, ok := x.GetCommand().(*QueueRequest_DeleteSingle); ok {
		return x.DeleteSingle
	}
	return nil
}

func (x *QueueRequest) GetDelete() *DeleteRequest {
	if x, ok := x.GetCommand().(*QueueRequest_Delete); ok {
		return x.Delete
	}
	return nil
}

type isQueueRequest_Command interface {
	isQueueRequest_Command()
}

type QueueRequest_Setup struct {
	Setup *SetupRequest `protobuf:"bytes,2,opt,name=setup,proto3,oneof"`
}

type QueueRequest_Noop struct {
	Noop *NoopRequest `protobuf:"bytes,3,opt,name=noop,proto3,oneof"`
}

type QueueRequest_Enqueue struct {
	Enqueue *EnqueueRequest `protobuf:"bytes,4,opt,name=enqueue,proto3,oneof"`
}

type QueueRequest_PullSingle struct {
	PullSingle *PullSingleRequest `protobuf:"bytes,5,opt,name=pullSingle,proto3,oneof"`
}

type QueueRequest_Pull struct {
	Pull *PullRequest `protobuf:"bytes,6,opt,name=pull,proto3,oneof"`
}

type QueueRequest_CommitSingle struct {
	CommitSingle *CommitSingleRequest `protobuf:"bytes,7,opt,name=commitSingle,proto3,oneof"`
}

type QueueRequest_Commit struct {
	Commit *CommitRequest `protobuf:"bytes,8,opt,name=commit,proto3,oneof"`
}

type QueueRequest_RequeueSingle struct {
	RequeueSingle *RequeueSingleRequest `protobuf:"bytes,9,opt,name=requeueSingle,proto3,oneof"`
}

type QueueRequest_Requeue struct {
	Requeue *RequeueRequest `protobuf:"bytes,10,opt,name=requeue,proto3,oneof"`
}

type QueueRequest_DeleteSingle struct {
	DeleteSingle *DeleteSingleRequest `protobuf:"bytes,11,opt,name=deleteSingle,proto3,oneof"`
}

type QueueRequest_Delete struct {
	Delete *DeleteRequest `protobuf:"bytes,12,opt,name=delete,proto3,oneof"`
}

func (*QueueRequest_Setup) isQueueRequest_Command() {}

func (*QueueRequest_Noop) isQueueRequest_Command() {}

func (*QueueRequest_Enqueue) isQueueRequest_Command() {}

func (*QueueRequest_PullSingle) isQueueRequest_Command() {}

func (*QueueRequest_Pull) isQueueRequest_Command() {}

func (*QueueRequest_CommitSingle) isQueueRequest_Command() {}

func (*QueueRequest_Commit) isQueueRequest_Command() {}

func (*QueueRequest_RequeueSingle) isQueueRequest_Command() {}

func (*QueueRequest_Requeue) isQueueRequest_Command() {}

func (*QueueRequest_DeleteSingle) isQueueRequest_Command() {}

func (*QueueRequest_Delete) isQueueRequest_Command() {}

type QueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId uint64 `protobuf:"varint,1,opt,name=correlationId,proto3" json:"correlationId,omitempty"`
	// Types that are assignable to Response:
	//
	//	*QueueResponse_Status
	//	*QueueResponse_Enqueue
	//	*QueueResponse_PullSingle
	//	*QueueResponse_Pull
	//	*QueueResponse_CommitSingle
	//	*QueueResponse_Commit
	//	*QueueResponse_RequeueSingle
	//	*QueueResponse_Requeue
	//	*QueueResponse_DeleteSingle
	//	*QueueResponse_Delete
	Response isQueueResponse_Response `protobuf_oneof:"response"`
}

func (x *QueueResponse) Reset() {
	*x = QueueResponse{}
	mi := &file_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueResponse) ProtoMessage() {}

func (x *QueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueResponse.ProtoReflect.Descriptor instead.
func (*QueueResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

func (x *QueueResponse) GetCorrelationId() uint64 {
	if x != nil {
		return x.CorrelationId
	}
	return 0
}

func (m *QueueResponse) GetResponse() isQueueResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *QueueResponse) GetStatus() *StatusResponse {
	if x, ok := x.GetResponse().(*QueueResponse_Status); ok {
		return x.Status
	}
	return nil
}

func (x *QueueResponse) GetEnqueue() *EnqueueResponse {
	if x, ok := x.GetResponse().(*QueueResponse_Enqueue); ok {
		return x.Enqueue
	}
	return nil
}

func (x *QueueResponse) GetPullSingle() *PullSingleResponse {
	if x, ok := x.GetResponse().(*QueueResponse_PullSingle); ok {
		return x.PullSingle
	}
	return nil
}

func (x *QueueResponse) GetPull() *PullResponse {
	if x, ok := x.GetResponse().(*QueueResponse_Pull); ok {
		return x.Pull
	}
	return nil
}

func (x *QueueResponse) GetCommitSingle() *CommitSingleResponse {
	if x, ok := x.GetResponse().(*QueueResponse_CommitSingle); ok {
		return x.CommitSingle
	}
	return nil
}

func (x *QueueResponse) GetCommit() *CommitResponse {
	if x, ok := x.GetResponse().(*QueueResponse_Commit); ok {
		return x.Commit
	}
	return nil
}

func (x *QueueResponse) GetRequeueSingle() *RequeueSingleResponse {
	if x, ok := x.GetResponse().(*QueueResponse_RequeueSingle); ok {
		return x.RequeueSingle
	}
	return nil
}

func (x *QueueResponse) GetRequeue() *RequeueResponse {
	if x, ok := x.GetResponse().(*QueueResponse_Requeue); ok {
		return x.Requeue
	}
	return nil
}

func (x *QueueResponse) GetDeleteSingle() *DeleteSingleResponse {
	if x, ok := x.GetResponse().(*QueueResponse_DeleteSingle); ok {
		return x.DeleteSingle
	}
	return nil
}

func (x *QueueResponse) GetDelete() *DeleteResponse {
	if x, ok := x.GetResponse().(*QueueResponse_Delete); ok {
		return x.Delete
	}
	return nil
}

type isQueueResponse_Response interface {
	isQueueResponse_Response()
}

type QueueResponse_Status struct {
	Status *StatusResponse `protobuf:"bytes,2,opt,name=status,proto3,oneof"`
}

type QueueResponse_Enqueue struct {
	Enqueue *EnqueueResponse `protobuf:"bytes,3,opt,name=enqueue,proto3,oneof"`
}

type QueueResponse_PullSingle struct {
	PullSingle *PullSingleResponse `protobuf:"bytes,4,opt,name=pullSingle,proto3,oneof"`
}

type QueueResponse_Pull struct {
	Pull *PullResponse `protobuf:"bytes,5,opt,name=pull,proto3,oneof"`
}

type QueueResponse_CommitSingle struct {
	CommitSingle *CommitSingleResponse `protobuf:"bytes,6,opt,name=commitSingle,proto3,oneof"`
}

type QueueResponse_Commit struct {
	Commit *CommitResponse `protobuf:"bytes,7,opt,name=commit,proto3,oneof"`
}

type QueueResponse_RequeueSingle struct {
	RequeueSingle *RequeueSingleResponse `protobuf:"bytes,8,opt,name=requeueSingle,proto3,oneof"`
}

type QueueResponse_Requeue struct {
	Requeue *RequeueResponse `protobuf:"bytes,9,opt,name=requeue,proto3,oneof"`
}

type QueueResponse_DeleteSingle struct {
	DeleteSingle *DeleteSingleResponse `protobuf:"bytes,10,opt,name=deleteSingle,proto3,oneof"`
}

type QueueResponse_Delete struct {
	Delete *DeleteResponse `protobuf:"bytes,11,opt,name=delete,proto3,oneof"`
}

func (*QueueResponse_Status) isQueueResponse_Response() {}

func (*QueueResponse_Enqueue) isQueueResponse_Response() {}

func (*QueueResponse_PullSingle) isQueueResponse_Response() {}

func (*QueueResponse_Pull) isQueueResponse_Response() {}

func (*QueueResponse_CommitSingle) isQueueResponse_Response() {}

func (*QueueResponse_Commit) isQueueResponse_Response() {}

func (*QueueResponse_RequeueSingle) isQueueResponse_Response() {}

func (*QueueResponse_Requeue) isQueueResponse_Response() {}

func (*QueueResponse_DeleteSingle) isQueueResponse_Response() {}

func (*QueueResponse_Delete) isQueueResponse_Response() {}

type SetupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueName string `protobuf:"bytes,1,opt,name=queueName,proto3" json:"queueName,omitempty"`
}

func (x *SetupRequest) Reset() {
	*x = SetupRequest{}
	mi := &file_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetupRequest) ProtoMessage() {}

func (x *SetupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetupRequest.ProtoReflect.Descriptor instead.
func (*SetupRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{4}
}

func (x *SetupRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

type NoopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoopRequest) Reset() {
	*x = NoopRequest{}
	mi := &file_messages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoopRequest) ProtoMessage() {}

func (x *NoopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoopRequest.ProtoReflect.Descriptor instead.
func (*NoopRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{5}
}

type StatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    StatusCode `protobuf:"varint,1,opt,name=code,proto3,enum=io.clbs.octopusmq.protobuf.StatusCode" json:"code,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_messages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{6}
}

func (x *StatusResponse) GetCode() StatusCode {
	if x != nil {
		return x.Code
	}
	return StatusCode_STATUS_CODE_OK
}

func (x *StatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// EnqueueRequest contains the item to be prepended and duration of the timeout.
type EnqueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the queue.
	Item    *InputItem           `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	Timeout *durationpb.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Prepend bool                 `protobuf:"varint,4,opt,name=prepend,proto3" json:"prepend,omitempty"`
}

func (x *EnqueueRequest) Reset() {
	*x = EnqueueRequest{}
	mi := &file_messages_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnqueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueRequest) ProtoMessage() {}

func (x *EnqueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueRequest.ProtoReflect.Descriptor instead.
func (*EnqueueRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{7}
}

func (x *EnqueueRequest) GetItem() *InputItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *EnqueueRequest) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *EnqueueRequest) GetPrepend() bool {
	if x != nil {
		return x.Prepend
	}
	return false
}

// EnqueueResponse sends back only item ID
type EnqueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EnqueueResponse) Reset() {
	*x = EnqueueResponse{}
	mi := &file_messages_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnqueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueResponse) ProtoMessage() {}

func (x *EnqueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueResponse.ProtoReflect.Descriptor instead.
func (*EnqueueResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{8}
}

func (x *EnqueueResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// PullSingleRequest message contains duration, for how long should request wait for item if the queue is empty.
type PullSingleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the queue.
	Timeout *durationpb.Duration `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *PullSingleRequest) Reset() {
	*x = PullSingleRequest{}
	mi := &file_messages_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullSingleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullSingleRequest) ProtoMessage() {}

func (x *PullSingleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullSingleRequest.ProtoReflect.Descriptor instead.
func (*PullSingleRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{9}
}

func (x *PullSingleRequest) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

// PullSingleResponse message contains the item pulled from the queue.
type PullSingleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *Item `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *PullSingleResponse) Reset() {
	*x = PullSingleResponse{}
	mi := &file_messages_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullSingleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullSingleResponse) ProtoMessage() {}

func (x *PullSingleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullSingleResponse.ProtoReflect.Descriptor instead.
func (*PullSingleResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{10}
}

func (x *PullSingleResponse) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

// PullRequest message: batchSize: number of items to pull, timeout: for how long should request wait for items if the queue is empty.
type PullRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the queue.
	BatchSize int32                `protobuf:"varint,2,opt,name=batchSize,proto3" json:"batchSize,omitempty"`
	Timeout   *durationpb.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *PullRequest) Reset() {
	*x = PullRequest{}
	mi := &file_messages_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullRequest) ProtoMessage() {}

func (x *PullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullRequest.ProtoReflect.Descriptor instead.
func (*PullRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{11}
}

func (x *PullRequest) GetBatchSize() int32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *PullRequest) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

// PullResponse message has array of pulled items.
type PullResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *PullResponse) Reset() {
	*x = PullResponse{}
	mi := &file_messages_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullResponse) ProtoMessage() {}

func (x *PullResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullResponse.ProtoReflect.Descriptor instead.
func (*PullResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{12}
}

func (x *PullResponse) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

// CommitSingleRequest
type CommitSingleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the queue.
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CommitSingleRequest) Reset() {
	*x = CommitSingleRequest{}
	mi := &file_messages_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitSingleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitSingleRequest) ProtoMessage() {}

func (x *CommitSingleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitSingleRequest.ProtoReflect.Descriptor instead.
func (*CommitSingleRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{13}
}

func (x *CommitSingleRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// CommitSingleResponse returns true if the item was committed.
type CommitSingleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Committed bool `protobuf:"varint,1,opt,name=committed,proto3" json:"committed,omitempty"`
}

func (x *CommitSingleResponse) Reset() {
	*x = CommitSingleResponse{}
	mi := &file_messages_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitSingleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitSingleResponse) ProtoMessage() {}

func (x *CommitSingleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitSingleResponse.ProtoReflect.Descriptor instead.
func (*CommitSingleResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{14}
}

func (x *CommitSingleResponse) GetCommitted() bool {
	if x != nil {
		return x.Committed
	}
	return false
}

// CommitRequest sends an array of item IDs to commit.
type CommitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the queue.
	Ids []uint64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *CommitRequest) Reset() {
	*x = CommitRequest{}
	mi := &file_messages_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitRequest) ProtoMessage() {}

func (x *CommitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitRequest.ProtoReflect.Descriptor instead.
func (*CommitRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{15}
}

func (x *CommitRequest) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// CommitResponse returns the number of items that were committed.
type CommitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32 `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
}

func (x *CommitResponse) Reset() {
	*x = CommitResponse{}
	mi := &file_messages_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitResponse) ProtoMessage() {}

func (x *CommitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitResponse.ProtoReflect.Descriptor instead.
func (*CommitResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{16}
}

func (x *CommitResponse) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

// RequeueSingleRequest message contains the ID of the item to requeue.
type RequeueSingleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the queue.
	Item *RequeueItem `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *RequeueSingleRequest) Reset() {
	*x = RequeueSingleRequest{}
	mi := &file_messages_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequeueSingleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequeueSingleRequest) ProtoMessage() {}

func (x *RequeueSingleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequeueSingleRequest.ProtoReflect.Descriptor instead.
func (*RequeueSingleRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{17}
}

func (x *RequeueSingleRequest) GetItem() *RequeueItem {
	if x != nil {
		return x.Item
	}
	return nil
}

// RequeueSingleResponse message returns true if the item was requeued.
type RequeueSingleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requeued bool `protobuf:"varint,1,opt,name=requeued,proto3" json:"requeued,omitempty"`
}

func (x *RequeueSingleResponse) Reset() {
	*x = RequeueSingleResponse{}
	mi := &file_messages_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequeueSingleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequeueSingleResponse) ProtoMessage() {}

func (x *RequeueSingleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequeueSingleResponse.ProtoReflect.Descriptor instead.
func (*RequeueSingleResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{18}
}

func (x *RequeueSingleResponse) GetRequeued() bool {
	if x != nil {
		return x.Requeued
	}
	return false
}

// RequeueRequest message sends an array of item IDs to requeue.
type RequeueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the queue.
	Items []*RequeueItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RequeueRequest) Reset() {
	*x = RequeueRequest{}
	mi := &file_messages_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequeueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequeueRequest) ProtoMessage() {}

func (x *RequeueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequeueRequest.ProtoReflect.Descriptor instead.
func (*RequeueRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{19}
}

func (x *RequeueRequest) GetItems() []*RequeueItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// Requeue item consists of id and ttl as unix absolute time in ms when requeued item is ready to be pulled, 0 means immediately.
type RequeueItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ttl *durationpb.Duration `protobuf:"bytes,2,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *RequeueItem) Reset() {
	*x = RequeueItem{}
	mi := &file_messages_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequeueItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequeueItem) ProtoMessage() {}

func (x *RequeueItem) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequeueItem.ProtoReflect.Descriptor instead.
func (*RequeueItem) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{20}
}

func (x *RequeueItem) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequeueItem) GetTtl() *durationpb.Duration {
	if x != nil {
		return x.Ttl
	}
	return nil
}

// RequeueResponse message returns the number of items that were requeued.
type RequeueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32 `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
}

func (x *RequeueResponse) Reset() {
	*x = RequeueResponse{}
	mi := &file_messages_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequeueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequeueResponse) ProtoMessage() {}

func (x *RequeueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequeueResponse.ProtoReflect.Descriptor instead.
func (*RequeueResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{21}
}

func (x *RequeueResponse) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

// DeleteSingleRequest message contains the ID of the item to delete.
type DeleteSingleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the queue.
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteSingleRequest) Reset() {
	*x = DeleteSingleRequest{}
	mi := &file_messages_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSingleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSingleRequest) ProtoMessage() {}

func (x *DeleteSingleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSingleRequest.ProtoReflect.Descriptor instead.
func (*DeleteSingleRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteSingleRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// DeleteSingleResponse message returns true if the item was deleted.
type DeleteSingleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deleted bool `protobuf:"varint,1,opt,name=deleted,proto3" json:"deleted,omitempty"`
}

func (x *DeleteSingleResponse) Reset() {
	*x = DeleteSingleResponse{}
	mi := &file_messages_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSingleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSingleResponse) ProtoMessage() {}

func (x *DeleteSingleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSingleResponse.ProtoReflect.Descriptor instead.
func (*DeleteSingleResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteSingleResponse) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

// DeleteRequest message sends an array of item IDs to delete.
type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the queue.
	Ids []uint64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_messages_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteRequest) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// DeleteResponse message returns the number of items that were deleted.
type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32 `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_messages_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteResponse) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

// CreateQueueRequest message contains the data to create a new queue.
type CreateQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Non-empty name of the queue.
	QueueName string `protobuf:"bytes,1,opt,name=queueName,proto3" json:"queueName,omitempty"`
	// Number of priorities, the lower the value, the higher the priority. The highest priority is 0, the lowest is 'priorities - 1'.
	Priorities uint32 `protobuf:"varint,2,opt,name=priorities,proto3" json:"priorities,omitempty"`
	// Maximum number of items in the queue. If set to 0, the queue has no limit.
	MaxSize uint32 `protobuf:"varint,3,opt,name=maxSize,proto3" json:"maxSize,omitempty"`
}

func (x *CreateQueueRequest) Reset() {
	*x = CreateQueueRequest{}
	mi := &file_messages_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueueRequest) ProtoMessage() {}

func (x *CreateQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueueRequest.ProtoReflect.Descriptor instead.
func (*CreateQueueRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{26}
}

func (x *CreateQueueRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *CreateQueueRequest) GetPriorities() uint32 {
	if x != nil {
		return x.Priorities
	}
	return 0
}

func (x *CreateQueueRequest) GetMaxSize() uint32 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

// DeleteQueueRequest message contains the identification of the queue to delete.
type DeleteQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueName string `protobuf:"bytes,1,opt,name=queueName,proto3" json:"queueName,omitempty"`
}

func (x *DeleteQueueRequest) Reset() {
	*x = DeleteQueueRequest{}
	mi := &file_messages_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQueueRequest) ProtoMessage() {}

func (x *DeleteQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQueueRequest.ProtoReflect.Descriptor instead.
func (*DeleteQueueRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteQueueRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

// ListQueuesResponse message contains an array of queues that are running on the server.
type ListQueuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queues []*ListQueueItem `protobuf:"bytes,1,rep,name=queues,proto3" json:"queues,omitempty"`
}

func (x *ListQueuesResponse) Reset() {
	*x = ListQueuesResponse{}
	mi := &file_messages_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQueuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueuesResponse) ProtoMessage() {}

func (x *ListQueuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueuesResponse.ProtoReflect.Descriptor instead.
func (*ListQueuesResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{28}
}

func (x *ListQueuesResponse) GetQueues() []*ListQueueItem {
	if x != nil {
		return x.Queues
	}
	return nil
}

// ListQueueItem message contains the queue info.
type ListQueueItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Non-empty name of the queue.
	QueueName string `protobuf:"bytes,1,opt,name=queueName,proto3" json:"queueName,omitempty"`
	// Number of priorities, the lower the value, the higher the priority. The highest priority is 0, the lowest is 'priorities - 1'.
	Priorities uint32 `protobuf:"varint,2,opt,name=priorities,proto3" json:"priorities,omitempty"`
	// Maximum number of items in the queue. If set to 0, the queue has no limit.
	MaxSize uint32 `protobuf:"varint,3,opt,name=maxSize,proto3" json:"maxSize,omitempty"`
	// Number of items in the queue.
	Count uint32 `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	// Identifies whether the queue is paused.
	Paused bool `protobuf:"varint,5,opt,name=paused,proto3" json:"paused,omitempty"`
}

func (x *ListQueueItem) Reset() {
	*x = ListQueueItem{}
	mi := &file_messages_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQueueItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueueItem) ProtoMessage() {}

func (x *ListQueueItem) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueueItem.ProtoReflect.Descriptor instead.
func (*ListQueueItem) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{29}
}

func (x *ListQueueItem) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *ListQueueItem) GetPriorities() uint32 {
	if x != nil {
		return x.Priorities
	}
	return 0
}

func (x *ListQueueItem) GetMaxSize() uint32 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *ListQueueItem) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListQueueItem) GetPaused() bool {
	if x != nil {
		return x.Paused
	}
	return false
}

// ResumeQueueRequest message contains the identification of the queue to resume.
type PauseQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueName string `protobuf:"bytes,1,opt,name=queueName,proto3" json:"queueName,omitempty"`
}

func (x *PauseQueueRequest) Reset() {
	*x = PauseQueueRequest{}
	mi := &file_messages_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseQueueRequest) ProtoMessage() {}

func (x *PauseQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseQueueRequest.ProtoReflect.Descriptor instead.
func (*PauseQueueRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{30}
}

func (x *PauseQueueRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

// ResumeQueueRequest message contains the identification of the queue to resume.
type ResumeQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueName string `protobuf:"bytes,1,opt,name=queueName,proto3" json:"queueName,omitempty"`
}

func (x *ResumeQueueRequest) Reset() {
	*x = ResumeQueueRequest{}
	mi := &file_messages_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResumeQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeQueueRequest) ProtoMessage() {}

func (x *ResumeQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeQueueRequest.ProtoReflect.Descriptor instead.
func (*ResumeQueueRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{31}
}

func (x *ResumeQueueRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

var File_messages_proto protoreflect.FileDescriptor

var file_messages_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1a, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75,
	0x73, 0x6d, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5a, 0x0a, 0x04,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x7c, 0x0a, 0x09, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2b, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x74,
	0x74, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf2, 0x06, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d,
	0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x40, 0x0a,
	0x05, 0x73, 0x65, 0x74, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69,
	0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d, 0x71,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x05, 0x73, 0x65, 0x74, 0x75, 0x70, 0x12,
	0x3d, 0x0a, 0x04, 0x6e, 0x6f, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d,
	0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4e, 0x6f, 0x6f, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x6f, 0x70, 0x12, 0x46,
	0x0a, 0x07, 0x65, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75,
	0x73, 0x6d, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x65,
	0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x70, 0x75, 0x6c, 0x6c, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x6f, 0x2e,
	0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d, 0x71, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x75, 0x6c,
	0x6c, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x70, 0x75, 0x6c, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e,
	0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x04, 0x70, 0x75, 0x6c, 0x6c, 0x12, 0x55, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x69,
	0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d, 0x71,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x43, 0x0a,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d,
	0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x12, 0x58, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x69, 0x6f, 0x2e, 0x63,
	0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d, 0x71, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x46, 0x0a, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d,
	0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x69, 0x6f, 0x2e,
	0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d, 0x71, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6f,
	0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d, 0x71, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xc2, 0x06, 0x0a, 0x0d,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63,
	0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x47, 0x0a, 0x07, 0x65, 0x6e, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6f, 0x2e,
	0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d, 0x71, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x07, 0x65, 0x6e, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x12, 0x50, 0x0a, 0x0a, 0x70, 0x75, 0x6c, 0x6c, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73,
	0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x75, 0x6c, 0x6c, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x70, 0x75, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63, 0x74,
	0x6f, 0x70, 0x75, 0x73, 0x6d, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x04,
	0x70, 0x75, 0x6c, 0x6c, 0x12, 0x56, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x69, 0x6f, 0x2e,
	0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d, 0x71, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0c,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x44, 0x0a, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69,
	0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d, 0x71,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x12, 0x59, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x69, 0x6f, 0x2e, 0x63,
	0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d, 0x71, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0d,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x47, 0x0a,
	0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73,
	0x6d, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x07, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12, 0x56, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x69,
	0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d, 0x71,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x44,
	0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73,
	0x6d, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2c, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x0d,
	0x0a, 0x0b, 0x4e, 0x6f, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x66, 0x0a,
	0x0e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e,
	0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d,
	0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x0e, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73,
	0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x22, 0x21, 0x0a, 0x0f, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x48, 0x0a, 0x11, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22,
	0x4a, 0x0a, 0x12, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63,
	0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x60, 0x0a, 0x0b, 0x50,
	0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x46, 0x0a,
	0x0c, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69,
	0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d, 0x71,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x25, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x14,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74,
	0x65, 0x64, 0x22, 0x21, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x22, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x53, 0x0a, 0x14, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3b, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75,
	0x73, 0x6d, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x33,
	0x0a, 0x15, 0x52, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x64, 0x22, 0x4f, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f,
	0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x4a, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x74, 0x74, 0x6c,
	0x22, 0x23, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x14,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x21,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x22, 0x22, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x6c, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x32, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x57, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a,
	0x06, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x62, 0x73, 0x2e, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d,
	0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73,
	0x22, 0x95, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x22, 0x31, 0x0a, 0x11, 0x50, 0x61, 0x75, 0x73,
	0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x32, 0x0a, 0x12, 0x52,
	0x65, 0x73, 0x75, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x2a,
	0xa7, 0x02, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4f, 0x4b,
	0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54,
	0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x20, 0x0a,
	0x1c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x04, 0x12,
	0x1e, 0x0a, 0x1a, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41,
	0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x05, 0x12,
	0x1f, 0x0a, 0x1b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x51,
	0x55, 0x45, 0x55, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x06,
	0x12, 0x1a, 0x0a, 0x16, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x51, 0x55, 0x45, 0x55, 0x45, 0x5f, 0x42, 0x55, 0x53, 0x59, 0x10, 0x07, 0x12, 0x1c, 0x0a, 0x18,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x51, 0x55, 0x45, 0x55,
	0x45, 0x5f, 0x50, 0x41, 0x55, 0x53, 0x45, 0x44, 0x10, 0x08, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4c, 0x45, 0x41, 0x44, 0x45, 0x52,
	0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x10, 0x09, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x62, 0x73, 0x2d, 0x69, 0x6f, 0x2f,
	0x6f, 0x63, 0x74, 0x6f, 0x70, 0x75, 0x73, 0x6d, 0x71, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData = file_messages_proto_rawDesc
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_proto_rawDescData)
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_messages_proto_goTypes = []any{
	(StatusCode)(0),               // 0: io.clbs.octopusmq.protobuf.StatusCode
	(*Item)(nil),                  // 1: io.clbs.octopusmq.protobuf.Item
	(*InputItem)(nil),             // 2: io.clbs.octopusmq.protobuf.InputItem
	(*QueueRequest)(nil),          // 3: io.clbs.octopusmq.protobuf.QueueRequest
	(*QueueResponse)(nil),         // 4: io.clbs.octopusmq.protobuf.QueueResponse
	(*SetupRequest)(nil),          // 5: io.clbs.octopusmq.protobuf.SetupRequest
	(*NoopRequest)(nil),           // 6: io.clbs.octopusmq.protobuf.NoopRequest
	(*StatusResponse)(nil),        // 7: io.clbs.octopusmq.protobuf.StatusResponse
	(*EnqueueRequest)(nil),        // 8: io.clbs.octopusmq.protobuf.EnqueueRequest
	(*EnqueueResponse)(nil),       // 9: io.clbs.octopusmq.protobuf.EnqueueResponse
	(*PullSingleRequest)(nil),     // 10: io.clbs.octopusmq.protobuf.PullSingleRequest
	(*PullSingleResponse)(nil),    // 11: io.clbs.octopusmq.protobuf.PullSingleResponse
	(*PullRequest)(nil),           // 12: io.clbs.octopusmq.protobuf.PullRequest
	(*PullResponse)(nil),          // 13: io.clbs.octopusmq.protobuf.PullResponse
	(*CommitSingleRequest)(nil),   // 14: io.clbs.octopusmq.protobuf.CommitSingleRequest
	(*CommitSingleResponse)(nil),  // 15: io.clbs.octopusmq.protobuf.CommitSingleResponse
	(*CommitRequest)(nil),         // 16: io.clbs.octopusmq.protobuf.CommitRequest
	(*CommitResponse)(nil),        // 17: io.clbs.octopusmq.protobuf.CommitResponse
	(*RequeueSingleRequest)(nil),  // 18: io.clbs.octopusmq.protobuf.RequeueSingleRequest
	(*RequeueSingleResponse)(nil), // 19: io.clbs.octopusmq.protobuf.RequeueSingleResponse
	(*RequeueRequest)(nil),        // 20: io.clbs.octopusmq.protobuf.RequeueRequest
	(*RequeueItem)(nil),           // 21: io.clbs.octopusmq.protobuf.RequeueItem
	(*RequeueResponse)(nil),       // 22: io.clbs.octopusmq.protobuf.RequeueResponse
	(*DeleteSingleRequest)(nil),   // 23: io.clbs.octopusmq.protobuf.DeleteSingleRequest
	(*DeleteSingleResponse)(nil),  // 24: io.clbs.octopusmq.protobuf.DeleteSingleResponse
	(*DeleteRequest)(nil),         // 25: io.clbs.octopusmq.protobuf.DeleteRequest
	(*DeleteResponse)(nil),        // 26: io.clbs.octopusmq.protobuf.DeleteResponse
	(*CreateQueueRequest)(nil),    // 27: io.clbs.octopusmq.protobuf.CreateQueueRequest
	(*DeleteQueueRequest)(nil),    // 28: io.clbs.octopusmq.protobuf.DeleteQueueRequest
	(*ListQueuesResponse)(nil),    // 29: io.clbs.octopusmq.protobuf.ListQueuesResponse
	(*ListQueueItem)(nil),         // 30: io.clbs.octopusmq.protobuf.ListQueueItem
	(*PauseQueueRequest)(nil),     // 31: io.clbs.octopusmq.protobuf.PauseQueueRequest
	(*ResumeQueueRequest)(nil),    // 32: io.clbs.octopusmq.protobuf.ResumeQueueRequest
	(*durationpb.Duration)(nil),   // 33: google.protobuf.Duration
}
var file_messages_proto_depIdxs = []int32{
	33, // 0: io.clbs.octopusmq.protobuf.InputItem.ttl:type_name -> google.protobuf.Duration
	5,  // 1: io.clbs.octopusmq.protobuf.QueueRequest.setup:type_name -> io.clbs.octopusmq.protobuf.SetupRequest
	6,  // 2: io.clbs.octopusmq.protobuf.QueueRequest.noop:type_name -> io.clbs.octopusmq.protobuf.NoopRequest
	8,  // 3: io.clbs.octopusmq.protobuf.QueueRequest.enqueue:type_name -> io.clbs.octopusmq.protobuf.EnqueueRequest
	10, // 4: io.clbs.octopusmq.protobuf.QueueRequest.pullSingle:type_name -> io.clbs.octopusmq.protobuf.PullSingleRequest
	12, // 5: io.clbs.octopusmq.protobuf.QueueRequest.pull:type_name -> io.clbs.octopusmq.protobuf.PullRequest
	14, // 6: io.clbs.octopusmq.protobuf.QueueRequest.commitSingle:type_name -> io.clbs.octopusmq.protobuf.CommitSingleRequest
	16, // 7: io.clbs.octopusmq.protobuf.QueueRequest.commit:type_name -> io.clbs.octopusmq.protobuf.CommitRequest
	18, // 8: io.clbs.octopusmq.protobuf.QueueRequest.requeueSingle:type_name -> io.clbs.octopusmq.protobuf.RequeueSingleRequest
	20, // 9: io.clbs.octopusmq.protobuf.QueueRequest.requeue:type_name -> io.clbs.octopusmq.protobuf.RequeueRequest
	23, // 10: io.clbs.octopusmq.protobuf.QueueRequest.deleteSingle:type_name -> io.clbs.octopusmq.protobuf.DeleteSingleRequest
	25, // 11: io.clbs.octopusmq.protobuf.QueueRequest.delete:type_name -> io.clbs.octopusmq.protobuf.DeleteRequest
	7,  // 12: io.clbs.octopusmq.protobuf.QueueResponse.status:type_name -> io.clbs.octopusmq.protobuf.StatusResponse
	9,  // 13: io.clbs.octopusmq.protobuf.QueueResponse.enqueue:type_name -> io.clbs.octopusmq.protobuf.EnqueueResponse
	11, // 14: io.clbs.octopusmq.protobuf.QueueResponse.pullSingle:type_name -> io.clbs.octopusmq.protobuf.PullSingleResponse
	13, // 15: io.clbs.octopusmq.protobuf.QueueResponse.pull:type_name -> io.clbs.octopusmq.protobuf.PullResponse
	15, // 16: io.clbs.octopusmq.protobuf.QueueResponse.commitSingle:type_name -> io.clbs.octopusmq.protobuf.CommitSingleResponse
	17, // 17: io.clbs.octopusmq.protobuf.QueueResponse.commit:type_name -> io.clbs.octopusmq.protobuf.CommitResponse
	19, // 18: io.clbs.octopusmq.protobuf.QueueResponse.requeueSingle:type_name -> io.clbs.octopusmq.protobuf.RequeueSingleResponse
	22, // 19: io.clbs.octopusmq.protobuf.QueueResponse.requeue:type_name -> io.clbs.octopusmq.protobuf.RequeueResponse
	24, // 20: io.clbs.octopusmq.protobuf.QueueResponse.deleteSingle:type_name -> io.clbs.octopusmq.protobuf.DeleteSingleResponse
	26, // 21: io.clbs.octopusmq.protobuf.QueueResponse.delete:type_name -> io.clbs.octopusmq.protobuf.DeleteResponse
	0,  // 22: io.clbs.octopusmq.protobuf.StatusResponse.code:type_name -> io.clbs.octopusmq.protobuf.StatusCode
	2,  // 23: io.clbs.octopusmq.protobuf.EnqueueRequest.item:type_name -> io.clbs.octopusmq.protobuf.InputItem
	33, // 24: io.clbs.octopusmq.protobuf.EnqueueRequest.timeout:type_name -> google.protobuf.Duration
	33, // 25: io.clbs.octopusmq.protobuf.PullSingleRequest.timeout:type_name -> google.protobuf.Duration
	1,  // 26: io.clbs.octopusmq.protobuf.PullSingleResponse.item:type_name -> io.clbs.octopusmq.protobuf.Item
	33, // 27: io.clbs.octopusmq.protobuf.PullRequest.timeout:type_name -> google.protobuf.Duration
	1,  // 28: io.clbs.octopusmq.protobuf.PullResponse.items:type_name -> io.clbs.octopusmq.protobuf.Item
	21, // 29: io.clbs.octopusmq.protobuf.RequeueSingleRequest.item:type_name -> io.clbs.octopusmq.protobuf.RequeueItem
	21, // 30: io.clbs.octopusmq.protobuf.RequeueRequest.items:type_name -> io.clbs.octopusmq.protobuf.RequeueItem
	33, // 31: io.clbs.octopusmq.protobuf.RequeueItem.ttl:type_name -> google.protobuf.Duration
	30, // 32: io.clbs.octopusmq.protobuf.ListQueuesResponse.queues:type_name -> io.clbs.octopusmq.protobuf.ListQueueItem
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	file_messages_proto_msgTypes[2].OneofWrappers = []any{
		(*QueueRequest_Setup)(nil),
		(*QueueRequest_Noop)(nil),
		(*QueueRequest_Enqueue)(nil),
		(*QueueRequest_PullSingle)(nil),
		(*QueueRequest_Pull)(nil),
		(*QueueRequest_CommitSingle)(nil),
		(*QueueRequest_Commit)(nil),
		(*QueueRequest_RequeueSingle)(nil),
		(*QueueRequest_Requeue)(nil),
		(*QueueRequest_DeleteSingle)(nil),
		(*QueueRequest_Delete)(nil),
	}
	file_messages_proto_msgTypes[3].OneofWrappers = []any{
		(*QueueResponse_Status)(nil),
		(*QueueResponse_Enqueue)(nil),
		(*QueueResponse_PullSingle)(nil),
		(*QueueResponse_Pull)(nil),
		(*QueueResponse_CommitSingle)(nil),
		(*QueueResponse_Commit)(nil),
		(*QueueResponse_RequeueSingle)(nil),
		(*QueueResponse_Requeue)(nil),
		(*QueueResponse_DeleteSingle)(nil),
		(*QueueResponse_Delete)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		EnumInfos:         file_messages_proto_enumTypes,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_rawDesc = nil
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
